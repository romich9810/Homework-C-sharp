using System;
using System.Collections.Generic;
using System.Diagnostics.Eventing.Reader;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _4_1_dossier
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string AddToDossier = "добавить досье";
            const string ShowAllDossiers = "вывести все досье";
            const string DeleteToDossier = "удалить досье";
            const string SearchingBySurname = "поиск по фамилии";
            const string Exit = "выход";
            const string NumberAddDossier = "1";
            const string NumberShowAllDossiers = "2";
            const string NumberDeleteDossier = "3";
            const string NumberSearchingBySurname = "4";
            const string NumberExit = "5";

            bool isWorking = true;

            string[] nameSurnames = new string[0];
            string[] posts = new string[0];
            string commandFromUser;

            while (isWorking)
            {
                Console.WriteLine("***Добро пожаловать в редактор досье!***\n\nВыберите команду: ");
                Console.Write($"{NumberAddDossier} - {AddToDossier}\n{NumberShowAllDossiers} - {ShowAllDossiers}\n" +
                    $"{NumberDeleteDossier} - {DeleteToDossier}\n{NumberSearchingBySurname} - {SearchingBySurname}\n{NumberExit} - {Exit}\n");
                commandFromUser = Console.ReadLine();

                switch (commandFromUser)
                {
                    case NumberAddDossier:
                        AddDossier(ref nameSurnames, ref posts);
                        break;

                    case NumberShowAllDossiers:
                        ShowDossiers(nameSurnames, posts);
                        break;

                    case NumberDeleteDossier:
                        DeleteDossier(ref nameSurnames, ref posts);
                        break;

                    case NumberSearchingBySurname:
                        FindBySurname(nameSurnames, posts);
                        break;

                    case NumberExit:
                        isWorking = false;
                        Console.Write("Завершение работы программы.");
                        break;

                    default:
                        Console.WriteLine("Неверная команда. Попробуйте ещё раз.");
                        break;
                }
            }
        }

        static void AddDossier(ref string[] arrayNames, ref string[] arrayPosts)
        {
            const string NumberAddAgain = "1";
            const string CommandAddAgain = "добавить ещё";
            const string CommandBack = "любая клавиша - к главному меню";

            string command;
            bool isNeedContune = true;

            while (isNeedContune == true)
            {
                Console.Clear();
                Console.WriteLine("***ФИО cотрудников***\n");

                Console.Write("ФИО сотрудника. ");
                arrayNames = ExpandMassive(arrayNames);

                Console.Write("Должность сотрудника. ");
                arrayPosts = ExpandMassive(arrayPosts);

                Console.Clear();
                Console.WriteLine($"Данные успешно внесены.\n{CommandBack}\n{NumberAddAgain} - {CommandAddAgain}");
                command = Console.ReadLine();

                if (command != NumberAddAgain)
                {
                    isNeedContune = false;
                }
            }

            Console.Clear();
        }

        static string[] ExpandMassive(string[] array)
        {
            string[] temporaryArray = new string[array.Length + 1];

            for (int j = 0; j < array.Length; j++)
            {
                temporaryArray[j] = array[j];
            }

            Console.Write("Введите данные:");
            temporaryArray[temporaryArray.Length - 1] = Console.ReadLine();
            array = temporaryArray;

            return array;
        }

        static void ShowDossiers(string[] arrayNames, string[] arrayPosts)
        {
            Console.WriteLine("Все имеющиеся досье:\n");

            for (int i = 0; i < arrayNames.Length; i++)
            {
                Console.WriteLine($"{i + 1}) {arrayNames[i]} - {arrayPosts[i]}");
            }

            Console.WriteLine("Для возвращения нажмите любую клавишу.");
            Console.ReadKey();
            Console.Clear();
        }

        static void DeleteDossier(ref string[] arrayNames, ref string[] arrayPosts)
        {
            int indexFromUserForDeleting;
            int indexForDeleting;

            ShowDossiers(arrayNames, arrayPosts);
            Console.WriteLine("Введите индекс для удаления досье: ");

            if (int.TryParse(Console.ReadLine(), out indexFromUserForDeleting))
            {
                indexForDeleting = indexFromUserForDeleting - 1;

                arrayNames = DeleteElementByIndexInArray(arrayNames, indexForDeleting);
                arrayPosts = DeleteElementByIndexInArray(arrayPosts, indexForDeleting);

                Console.WriteLine("\nПосле удаления:");
                ShowDossiers(arrayNames, arrayPosts);
            }
            else
            {
                Console.WriteLine("Неверное значение индекса.");
                Console.ReadKey();
            }

            Console.Clear();
        }

        static string[] DeleteElementByIndexInArray(string[] array, int indexForMoving)
        {
            string temporaryMember;

            for (int i = indexForMoving; i < array.Length - 1; i++)
            {
                temporaryMember = array[i + 1];
                array[i + 1] = array[i];
                array[i] = temporaryMember;
            }

            string[] temporaryArray = new string[array.Length - 1];

            for (int i = 0; i < temporaryArray.Length; i++)
            {
                temporaryArray[i] = array[i];
            }

            array = temporaryArray;

            return array;
        }

        static void FindBySurname(string[] arrayNames, string[] arrayPosts)
        {
            char divider = ' ';
            string[] potentialMatchingWords;
            string surname;
            bool isThereSurnameInArray = false;

            Console.WriteLine("Введите фамилию для поиска");
            surname = Console.ReadLine();

            for (int i = 0; i < arrayNames.Length; i++)
            {
                potentialMatchingWords = arrayNames[i].Split(divider);

                if (potentialMatchingWords[0] == surname) 
                {
                    Console.WriteLine($"Такое досье есть!Вот оно:\n{arrayNames[i]} - {arrayPosts[i]}");
                    isThereSurnameInArray = true;
                    Console.ReadKey();
                }
            }

            if (isThereSurnameInArray == false)
            {
                Console.WriteLine("Такой фамилии не найдено! Нажмите любую клавишу, чтобы продолжить.");
                Console.ReadKey();
            }

            Console.Clear();
        }
    }
}
